{"version":3,"sources":["bower_components/html-imports/src/html-imports.js","src/post-polyfill.js","src/unresolved.js"],"names":["scope","newCustomEvent","type","params","window","CustomEvent","event","document","createEvent","initCustomEvent","bubbles","cancelable","detail","importForElement","element","useNative","ownerDocument","doc","parentNode","closest","importSelector","isImportLink","whenImportsReady","callback","imports","querySelectorAll","rootImportSelector","pending","length","i","l","imp","whenElementLoaded","whenDocumentReady","readyState","stateChanged","removeEventListener","addEventListener","whenReady","import","localName","src","onLoadingDone","isIE","node","nodeType","Node","ELEMENT_NODE","rel","constructor","Importer","documents","inflight","dynamicImportsMO","MutationObserver","m","handleMutations","observe","head","childList","subtree","loadImports","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","STYLESHEET_REGEXP","Path","fixUrls","base","href","setAttribute","replaceAttrUrl","getAttribute","r","replaceUrls","textContent","text","linkUrl","regexp","replace","pre","url","post","urlPath","resolveUrl","test","undefined","__workingURL","u","URL","pathname","e","__tempDoc","implementation","createHTMLDocument","__base","appendChild","__anchor","Xhr","async","load","success","fail","match","pieces","split","resource","header","indexOf","atob","decodeURIComponent","request","XMLHttpRequest","open","onload","request.onload","redirectedUrl","getResponseHeader","location","origin","protocol","host","response","responseText","status","send","navigator","userAgent","links","loadImport","link","fireEventIfNeeded","makeDocument","processImportsIfLoadingDone","createDocumentFragment","p1","p2","template","innerHTML","content","firstChild","baseEl","querySelector","removeAttribute","n$","importDependenciesSelector","inlineScriptIndex","n","importDependencyAttr","encodeURIComponent","num","disconnect","flatten","scriptsOk","stylesOk","fireEvents","waitForStyles","runScripts","DOCUMENT_FRAGMENT_NODE","enumerable","cloneScript","s","s$","clone","j","ll","attributes","name","value","replaceChild","pendingScriptsSelector","pendingStylesSelector","needsMove","disabledLinkSelector","placeholder","insertBefore","nextSibling","newSibling","dispatchEvent","eventType","mutations","addedNodes","ii","elem","imps","target","HTMLImports","customElements","flushCallback","runAndClearCallback","cb","origWhenReady","requestAnimationFrame","style"],"mappings":"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","file":"webcomponents-hi.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(scope => {\n\n  /********************* base setup *********************/\n  const useNative = Boolean('import' in document.createElement('link'));\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat. This is not needed by\n          // html-imports polyfill but helps generally polyfill `currentScript`.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  const STYLESHEET_REGEXP = /(<link[^>]*)(rel=['|\"]?stylesheet['|\"]?[^>]*>)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n\n    fixUrls(element, base) {\n      if (element.href) {\n        element.setAttribute('href',\n          Path.replaceAttrUrl(element.getAttribute('href'), base));\n      }\n      if (element.src) {\n        element.setAttribute('src',\n          Path.replaceAttrUrl(element.getAttribute('src'), base));\n      }\n      if (element.localName === 'style') {\n        const r = Path.replaceUrls(element.textContent, base, CSS_URL_REGEXP);\n        element.textContent = Path.replaceUrls(r, base, CSS_IMPORT_REGEXP);\n      }\n    },\n\n    replaceUrls(text, linkUrl, regexp) {\n      return text.replace(regexp, (m, pre, url, post) => {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = Path.resolveUrl(urlPath, linkUrl);\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return Path.resolveUrl(text, linkUrl);\n      }\n    },\n\n    resolveUrl(url, base) {\n      // Lazy feature detection.\n      if (Path.__workingURL === undefined) {\n        Path.__workingURL = false;\n        try {\n          const u = new URL('b', 'http://a');\n          u.pathname = 'c%20d';\n          Path.__workingURL = (u.href === 'http://a/c%20d');\n        } catch (e) {}\n      }\n\n      if (Path.__workingURL) {\n        return (new URL(url, base)).href;\n      }\n\n      // Fallback to creating an anchor into a disconnected document.\n      let doc = Path.__tempDoc;\n      if (!doc) {\n        doc = document.implementation.createHTMLDocument('temp');\n        Path.__tempDoc = doc;\n        doc.__base = doc.createElement('base');\n        doc.head.appendChild(doc.__base);\n        doc.__anchor = doc.createElement('a');\n      }\n      doc.__base.href = base;\n      doc.__anchor.href = url;\n      return doc.__anchor.href || url;\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(!string, string=)} success\n     * @param {!function(!string)} fail\n     */\n    load(url, success, fail) {\n      if (!url) {\n        fail('error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let resource = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          resource = atob(resource);\n        } else {\n          resource = decodeURIComponent(resource);\n        }\n        success(resource);\n      } else {\n        const request = new XMLHttpRequest();\n        request.open('GET', url, Xhr.async);\n        request.onload = () => {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly. Handle relative and full paths.\n          let redirectedUrl = request.getResponseHeader('Location');\n          if (redirectedUrl && redirectedUrl.indexOf('/') === 0) {\n            // In IE location.origin might not work\n            // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n            const origin = (location.origin || location.protocol + '//' + location.host);\n            redirectedUrl = origin + redirectedUrl;\n          }\n          const resource = /** @type {string} */ (request.response || request.responseText);\n          if (request.status === 304 || request.status === 0 ||\n            request.status >= 200 && request.status < 300) {\n            success(resource, redirectedUrl);\n          } else {\n            fail(resource);\n          }\n        };\n        request.send();\n      }\n    }\n  };\n\n  /********************* importer *********************/\n\n  const isIE = /Trident/.test(navigator.userAgent) ||\n    /Edge\\/\\d./i.test(navigator.userAgent);\n\n  const importSelector = 'link[rel=import]';\n\n  // Used to disable loading of resources.\n  const importDisableType = 'import-disable';\n\n  const disabledLinkSelector = `link[rel=stylesheet][href][type=${importDisableType}]`;\n\n  const importDependenciesSelector = `${importSelector}, ${disabledLinkSelector},\n    style:not([type]), link[rel=stylesheet][href]:not([type]),\n    script:not([type]), script[type=\"application/javascript\"],\n    script[type=\"text/javascript\"]`;\n\n  const importDependencyAttr = 'import-dependency';\n\n  const rootImportSelector = `${importSelector}:not(${importDependencyAttr})`;\n\n  const pendingScriptsSelector = `script[${importDependencyAttr}]`;\n\n  const pendingStylesSelector = `style[${importDependencyAttr}],\n    link[rel=stylesheet][${importDependencyAttr}]`;\n\n  /**\n   * Importer will:\n   * - load any linked import documents (with deduping)\n   * - whenever an import is loaded, prompt the parser to try to parse\n   * - observe imported documents for new elements (these are handled via the\n   *   dynamic importer)\n   */\n  class Importer {\n    constructor() {\n      this.documents = {};\n      // Used to keep track of pending loads, so that flattening and firing of\n      // events can be done when all resources are ready.\n      this.inflight = 0;\n      this.dynamicImportsMO = new MutationObserver(m => this.handleMutations(m));\n      // 1. Load imports contents\n      // 2. Assign them to first import links on the document\n      // 3. Wait for import styles & scripts to be done loading/running\n      // 4. Fire load/error events\n      whenDocumentReady(() => {\n        // Observe changes on <head>.\n        this.dynamicImportsMO.observe(document.head, {\n          childList: true,\n          subtree: true\n        });\n        this.loadImports(document);\n      });\n    }\n\n    /**\n     * @param {!(HTMLDocument|DocumentFragment|Element)} doc\n     */\n    loadImports(doc) {\n      const links = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = links.length; i < l; i++) {\n        this.loadImport(links[i]);\n      }\n    }\n\n    /**\n     * @param {!HTMLLinkElement} link\n     */\n    loadImport(link) {\n      const url = link.href;\n      // This resource is already being handled by another import.\n      if (this.documents[url] !== undefined) {\n        // If import is already loaded, we can safely associate it to the link\n        // and fire the load/error event.\n        const imp = this.documents[url];\n        if (imp && imp['__loaded']) {\n          link.import = imp;\n          this.fireEventIfNeeded(link);\n        }\n        return;\n      }\n      this.inflight++;\n      // Mark it as pending to notify others this url is being loaded.\n      this.documents[url] = 'pending';\n      Xhr.load(url, (resource, redirectedUrl) => {\n        const doc = this.makeDocument(resource, redirectedUrl || url);\n        this.documents[url] = doc;\n        this.inflight--;\n        // Load subtree.\n        this.loadImports(doc);\n        this.processImportsIfLoadingDone();\n      }, () => {\n        // If load fails, handle error.\n        this.documents[url] = null;\n        this.inflight--;\n        this.processImportsIfLoadingDone();\n      });\n    }\n\n    /**\n     * Creates a new document containing resource and normalizes urls accordingly.\n     * @param {string=} resource\n     * @param {string=} url\n     * @return {!DocumentFragment}\n     */\n    makeDocument(resource, url) {\n      if (!resource) {\n        return document.createDocumentFragment();\n      }\n\n      if (isIE) {\n        // <link rel=stylesheet> should be appended to <head>. Not doing so\n        // in IE/Edge breaks the cascading order. We disable the loading by\n        // setting the type before setting innerHTML to avoid loading\n        // resources twice.\n        resource = resource.replace(STYLESHEET_REGEXP, (match, p1, p2) => {\n          if (match.indexOf('type=') === -1) {\n            return `${p1} type=${importDisableType} ${p2}`;\n          }\n          return match;\n        });\n      }\n\n      let content;\n      const template = /** @type {!HTMLTemplateElement} */\n        (document.createElement('template'));\n      template.innerHTML = resource;\n      if (template.content) {\n        // This creates issues in Safari10 when used with shadydom (see #12).\n        content = template.content;\n      } else {\n        // <template> not supported, create fragment and move content into it.\n        content = document.createDocumentFragment();\n        while (template.firstChild) {\n          content.appendChild(template.firstChild);\n        }\n      }\n\n      // Support <base> in imported docs. Resolve url and remove its href.\n      const baseEl = content.querySelector('base');\n      if (baseEl) {\n        url = Path.replaceAttrUrl(baseEl.getAttribute('href'), url);\n        baseEl.removeAttribute('href');\n      }\n\n      const n$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)>} */\n        (content.querySelectorAll(importDependenciesSelector));\n      // For source map hints.\n      let inlineScriptIndex = 0;\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        // Listen for load/error events, then fix urls.\n        whenElementLoaded(n);\n        Path.fixUrls(n, url);\n        // Mark for easier selectors.\n        n.setAttribute(importDependencyAttr, '');\n        // Generate source map hints for inline scripts.\n        if (n.localName === 'script' && !n.src && n.textContent) {\n          const num = inlineScriptIndex ? `-${inlineScriptIndex}` : '';\n          const content = n.textContent + `\\n//# sourceURL=${url}${num}.js\\n`;\n          // We use the src attribute so it triggers load/error events, and it's\n          // easier to capture errors (e.g. parsing) like this.\n          n.setAttribute('src', 'data:text/javascript;charset=utf-8,' + encodeURIComponent(content));\n          n.textContent = '';\n          inlineScriptIndex++;\n        }\n      }\n      return content;\n    }\n\n    /**\n     * Waits for loaded imports to finish loading scripts and styles, then fires\n     * the load/error events.\n     */\n    processImportsIfLoadingDone() {\n      // Wait until all resources are ready, then load import resources.\n      if (this.inflight) {\n        return;\n      }\n\n      // Stop observing, flatten & load resource, then restart observing <head>.\n      this.dynamicImportsMO.disconnect();\n      this.flatten(document);\n      // We wait for styles to load, and at the same time we execute the scripts,\n      // then fire the load/error events for imports to have faster whenReady\n      // callback execution.\n      // NOTE: This is different for native behavior where scripts would be\n      // executed after the styles before them are loaded.\n      // To achieve that, we could select pending styles and scripts in the\n      // document and execute them sequentially in their dom order.\n      let scriptsOk = false,\n        stylesOk = false;\n      const onLoadingDone = () => {\n        if (stylesOk && scriptsOk) {\n          // Restart observing.\n          this.dynamicImportsMO.observe(document.head, {\n            childList: true,\n            subtree: true\n          });\n          this.fireEvents();\n        }\n      }\n      this.waitForStyles(() => {\n        stylesOk = true;\n        onLoadingDone();\n      });\n      this.runScripts(() => {\n        scriptsOk = true;\n        onLoadingDone();\n      });\n    }\n\n    /**\n     * @param {!HTMLDocument} doc\n     */\n    flatten(doc) {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (doc.querySelectorAll(importSelector));\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        const imp = this.documents[n.href];\n        n.import = /** @type {!Document} */ (imp);\n        if (imp && imp.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n          // We set the .import to be the link itself, and update its readyState.\n          // Other links with the same href will point to this link.\n          this.documents[n.href] = n;\n          n.readyState = 'loading';\n          // Suppress Closure warning about incompatible subtype assignment.\n          ( /** @type {!HTMLElement} */ (n).import = n);\n          // Override baseURI so that link.import.baseURI can be used seemlessly\n          // on native or polyfilled html-imports.\n          Object.defineProperty(n, 'baseURI', {\n            get: () => n.href,\n            configurable: true,\n            enumerable: true\n          });\n          this.flatten(imp);\n          n.appendChild(imp);\n        }\n      }\n    }\n\n    /**\n     * Replaces all the imported scripts with a clone in order to execute them.\n     * Updates the `currentScript`.\n     * @param {!function()} callback\n     */\n    runScripts(callback) {\n      const s$ = document.querySelectorAll(pendingScriptsSelector);\n      const l = s$.length;\n      const cloneScript = i => {\n        if (i < l) {\n          // The pending scripts have been generated through innerHTML and\n          // browsers won't execute them for security reasons. We cannot use\n          // s.cloneNode(true) either, the only way to run the script is manually\n          // creating a new element and copying its attributes.\n          const s = s$[i];\n          const clone = /** @type {!HTMLScriptElement} */\n            (document.createElement('script'));\n          // Remove import-dependency attribute to avoid double cloning.\n          s.removeAttribute(importDependencyAttr);\n          for (let j = 0, ll = s.attributes.length; j < ll; j++) {\n            clone.setAttribute(s.attributes[j].name, s.attributes[j].value);\n          }\n          // Update currentScript and replace original with clone script.\n          currentScript = clone;\n          s.parentNode.replaceChild(clone, s);\n          whenElementLoaded(clone, () => {\n            currentScript = null;\n            cloneScript(i + 1);\n          });\n        } else {\n          callback();\n        }\n      };\n      cloneScript(0);\n    }\n\n    /**\n     * Waits for all the imported stylesheets/styles to be loaded.\n     * @param {!function()} callback\n     */\n    waitForStyles(callback) {\n      const s$ = /** @type {!NodeList<!(HTMLLinkElement|HTMLStyleElement)>} */\n        (document.querySelectorAll(pendingStylesSelector));\n      let pending = s$.length;\n      if (!pending) {\n        callback();\n        return;\n      }\n      // <link rel=stylesheet> should be appended to <head>. Not doing so\n      // in IE/Edge breaks the cascading order\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10472273/\n      // If there is one <link rel=stylesheet> imported, we must move all imported\n      // links and styles to <head>.\n      const needsMove = isIE && !!document.querySelector(disabledLinkSelector);\n      for (let i = 0, l = s$.length, s; i < l && (s = s$[i]); i++) {\n        // Listen for load/error events, remove selector once is done loading.\n        whenElementLoaded(s, () => {\n          s.removeAttribute(importDependencyAttr);\n          if (--pending === 0) {\n            callback();\n          }\n        });\n        // Check if was already moved to head, to handle the case where the element\n        // has already been moved but it is still loading.\n        if (needsMove && s.parentNode !== document.head) {\n          // Replace the element we're about to move with a placeholder.\n          const placeholder = document.createElement(s.localName);\n          // Add reference of the moved element.\n          placeholder['__appliedElement'] = s;\n          // Disable this from appearing in document.styleSheets.\n          placeholder.setAttribute('type', 'import-placeholder');\n          // Append placeholder next to the sibling, and move original to <head>.\n          s.parentNode.insertBefore(placeholder, s.nextSibling);\n          let newSibling = importForElement(s);\n          while (newSibling && importForElement(newSibling)) {\n            newSibling = importForElement(newSibling);\n          }\n          if (newSibling.parentNode !== document.head) {\n            newSibling = null;\n          }\n          document.head.insertBefore(s, newSibling);\n          // Enable the loading of <link rel=stylesheet>.\n          s.removeAttribute('type');\n        }\n      }\n    }\n\n    /**\n     * Fires load/error events for imports in the right order .\n     */\n    fireEvents() {\n      const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n        (document.querySelectorAll(importSelector));\n      // Inverse order to have events firing bottom-up.\n      for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n        this.fireEventIfNeeded(n);\n      }\n    }\n\n    /**\n     * Fires load/error event for the import if this wasn't done already.\n     * @param {!HTMLLinkElement} link\n     */\n    fireEventIfNeeded(link) {\n      // Don't fire twice same event.\n      if (!link['__loaded']) {\n        link['__loaded'] = true;\n        // Update link's import readyState.\n        link.import && (link.import.readyState = 'complete');\n        const eventType = link.import ? 'load' : 'error';\n        link.dispatchEvent(newCustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    handleMutations(mutations) {\n      for (let i = 0; i < mutations.length; i++) {\n        const m = mutations[i];\n        if (!m.addedNodes) {\n          continue;\n        }\n        for (let ii = 0; ii < m.addedNodes.length; ii++) {\n          const elem = m.addedNodes[ii];\n          if (!elem || elem.nodeType !== Node.ELEMENT_NODE) {\n            continue;\n          }\n          // NOTE: added scripts are not updating currentScript in IE.\n          if (isImportLink(elem)) {\n            this.loadImport( /** @type {!HTMLLinkElement} */ (elem));\n          } else {\n            this.loadImports( /** @type {!Element} */ (elem));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  const isImportLink = node => {\n    return node.nodeType === Node.ELEMENT_NODE && node.localName === 'link' &&\n      ( /** @type {!HTMLLinkElement} */ (node).rel === 'import');\n  };\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the element accordingly.\n   * @param {!(HTMLLinkElement|HTMLScriptElement|HTMLStyleElement)} element\n   * @param {function()=} callback\n   */\n  const whenElementLoaded = (element, callback) => {\n    if (element['__loaded']) {\n      callback && callback();\n    } else if (isImportLink(element) &&\n      (!useNative && /** @type {!HTMLLinkElement}*/ (element).import === null) ||\n      (element.import && /** @type {!HTMLLinkElement}*/ (element).import.readyState === 'complete')) {\n      // This import has already been loaded but its __loaded property got removed. Ensure\n      // we set it back!\n      element['__loaded'] = true;\n      callback && callback();\n    } else if (element.localName === 'script' && !element.src) {\n      // Inline scripts don't trigger load/error events, consider them already loaded.\n      element['__loaded'] = true;\n      callback && callback();\n    } else {\n      const onLoadingDone = event => {\n        element.removeEventListener(event.type, onLoadingDone);\n        element['__loaded'] = true;\n        callback && callback();\n      };\n      element.addEventListener('load', onLoadingDone);\n      // NOTE: We listen only for load events in IE/Edge, because in IE/Edge\n      // <style> with @import will fire error events for each failing @import,\n      // and finally will trigger the load event when all @import are\n      // finished (even if all fail).\n      if (!isIE || element.localName !== 'style') {\n        element.addEventListener('error', onLoadingDone);\n      }\n    }\n  }\n\n  /**\n   * Calls the callback when all imports in the document at call time\n   * (or at least document ready) have loaded. Callback is called synchronously\n   * if imports are already done loading.\n   * @param {function()=} callback\n   */\n  const whenReady = callback => {\n    // 1. ensure the document is in a ready state (has dom), then\n    // 2. watch for loading of imports and call callback when done\n    whenDocumentReady(() => whenImportsReady(() => callback && callback()));\n  }\n\n  /**\n   * Invokes the callback when document is in ready state. Callback is called\n   *  synchronously if document is already done loading.\n   * @param {!function()} callback\n   */\n  const whenDocumentReady = callback => {\n    if (document.readyState !== 'loading') {\n      callback();\n    } else {\n      const stateChanged = () => {\n        if (document.readyState !== 'loading') {\n          document.removeEventListener('readystatechange', stateChanged);\n          callback();\n        }\n      }\n      document.addEventListener('readystatechange', stateChanged);\n    }\n  }\n\n  /**\n   * Invokes the callback after all imports are loaded. Callback is called\n   * synchronously if imports are already done loading.\n   * @param {!function()} callback\n   */\n  const whenImportsReady = callback => {\n    let imports = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(rootImportSelector));\n    let pending = imports.length;\n    if (!pending) {\n      callback();\n      return;\n    }\n    for (let i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n      whenElementLoaded(imp, () => {\n        if (--pending === 0) {\n          callback();\n        }\n      });\n    }\n  }\n\n  /**\n   * Returns the import document containing the element.\n   * @param {!Node} element\n   * @return {HTMLLinkElement|Document|undefined}\n   */\n  const importForElement = element => {\n    if (useNative) {\n      // Return only if not in the main doc!\n      return element.ownerDocument !== document ? element.ownerDocument : null;\n    }\n    let doc = element['__importDoc'];\n    if (!doc && element.parentNode) {\n      doc = /** @type {!Element} */ (element.parentNode);\n      if (typeof doc.closest === 'function') {\n        // Element.closest returns the element itself if it matches the selector,\n        // so we search the closest import starting from the parent.\n        doc = doc.closest(importSelector);\n      } else {\n        // Walk up the parent tree until we find an import.\n        while (!isImportLink(doc) && (doc = doc.parentNode)) {}\n      }\n      element['__importDoc'] = doc;\n    }\n    return doc;\n  }\n\n  const newCustomEvent = (type, params) => {\n    if (typeof window.CustomEvent === 'function') {\n      return new CustomEvent(type, params);\n    }\n    const event = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    event.initCustomEvent(type, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n    return event;\n  };\n\n  if (useNative) {\n    // Check for imports that might already be done loading by the time this\n    // script is actually executed. Native imports are blocking, so the ones\n    // available in the document by this time should already have failed\n    // or have .import defined.\n    const imps = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(importSelector));\n    for (let i = 0, l = imps.length, imp; i < l && (imp = imps[i]); i++) {\n      if (!imp.import || imp.import.readyState !== 'loading') {\n        imp['__loaded'] = true;\n      }\n    }\n    // Listen for load/error events to capture dynamically added scripts.\n    /**\n     * @type {!function(!Event)}\n     */\n    const onLoadingDone = event => {\n      const elem = /** @type {!Element} */ (event.target);\n      if (isImportLink(elem)) {\n        elem['__loaded'] = true;\n      }\n    };\n    document.addEventListener('load', onLoadingDone, true /* useCapture */ );\n    document.addEventListener('error', onLoadingDone, true /* useCapture */ );\n  } else {\n    new Importer();\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n  whenReady(() => document.dispatchEvent(newCustomEvent('HTMLImportsLoaded', {\n    cancelable: true,\n    bubbles: true,\n    detail: undefined\n  })));\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n  scope.importForElement = importForElement;\n\n})(window.HTMLImports = (window.HTMLImports || {}));","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n\n  'use strict';\n\n  var customElements = window['customElements'];\n  var HTMLImports = window['HTMLImports'];\n\n  if (customElements && customElements['polyfillWrapFlushCallback']) {\n    // Here we ensure that the public `HTMLImports.whenReady`\n    // always comes *after* custom elements have upgraded.\n    var flushCallback;\n    var runAndClearCallback = function runAndClearCallback() {\n      if (flushCallback) {\n        var cb = flushCallback;\n        flushCallback = null;\n        cb();\n        return true;\n      }\n    }\n    var origWhenReady = HTMLImports['whenReady'];\n    customElements['polyfillWrapFlushCallback'](function(cb) {\n      flushCallback = cb;\n      origWhenReady(runAndClearCallback);\n    });\n\n    HTMLImports['whenReady'] = function(cb) {\n      origWhenReady(function() {\n        // custom element code may add dynamic imports\n        // to match processing of native custom elements before\n        // domContentLoaded, we wait for these imports to resolve first.\n        if (runAndClearCallback()) {\n          HTMLImports['whenReady'](cb);\n        } else {\n          cb();\n        }\n      });\n    }\n\n  }\n\n  HTMLImports['whenReady'](function() {\n    requestAnimationFrame(function() {\n      window.dispatchEvent(new CustomEvent('WebComponentsReady'));\n    });\n  });\n\n})();","/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n  'use strict';\n  // It's desireable to provide a default stylesheet\n  // that's convenient for styling unresolved elements, but\n  // it's cumbersome to have to include this manually in every page.\n  // It would make sense to put inside some HTMLImport but\n  // the HTMLImports polyfill does not allow loading of stylesheets\n  // that block rendering. Therefore this injection is tolerated here.\n  //\n  // NOTE: position: relative fixes IE's failure to inherit opacity\n  // when a child is not statically positioned.\n  var style = document.createElement('style');\n  style.textContent = ''\n      + 'body {'\n      + 'transition: opacity ease-in 0.2s;'\n      + ' } \\n'\n      + 'body[unresolved] {'\n      + 'opacity: 0; display: block; overflow: hidden; position: relative;'\n      + ' } \\n'\n      ;\n  var head = document.querySelector('head');\n  head.insertBefore(style, head.firstChild);\n\n})();\n"]}